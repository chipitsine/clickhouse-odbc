language: cpp
dist: bionic

os:
  - linux

compiler:
  - clang

addons:
  apt:
     sources: [ ubuntu-toolchain-r-test ]
     # should install fresh libstdc++ because trusty have no <codecvt> header
     packages: [ ninja-build, libstdc++-8-dev ]

matrix:
    include:
        # clang5 unixodbc
        - os: linux
          compiler: clang
          env: MATRIX_EVAL="export CC=clang CXX=clang++ ODBC_LIB=unixodbc-dev"
          addons:
            apt:
              sources: [ ubuntu-toolchain-r-test ]
              packages: [ ninja-build, libstdc++-8-dev, clang, unixodbc, unixodbc-bin, unixodbc-dev, perl, libdbi-perl, libdbd-odbc-perl, python, python-pyodbc ]

    exclude:
        - os: linux
          compiler: gcc
        - os: osx
          compiler: gcc

install:
  - eval "${MATRIX_EVAL}"
    # brew update is to mitigate Travis error "Error: Your Homebrew is outdated. Please run `brew update`."
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo "installing ninja + ${HOMEBREW_PACKAGES}"; brew install ninja ${HOMEBREW_PACKAGES}; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo "installing & starting ClickHouse"; ./test/deploy_and_run_clickhouse_macos.sh; fi # TODO: use native package manager when available
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -n "$ODBC_LIB" ]; then sudo apt-add-repository "deb http://archive.ubuntu.com/ubuntu bionic main universe"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -n "$ODBC_LIB" ]; then sudo apt-get update -q > build.log 2>&1 || (cat build.log && exit 1); fi
  # Need in binulils because /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/libodbc.a(logOpen.o): unrecognized relocation (0x2a) in section `.text'
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ -n "$ODBC_LIB" ]; then sudo apt-get install -y $ODBC_LIB binutils | tee build.log 2>&1 || (cat build.log && exit 1); fi

before_script:
  # nanodbc for more tests
  - cd ./contrib && git clone --recursive https://github.com/nanodbc/nanodbc.git && cd ..
  - ls -lah . ./contrib

script:
  - mkdir -p build
  - cd build
  # MS ODBC uses UCS2 for widechars (2 bytes per char)  
  # unixODBC do the same by default (2 bytes per char), but can be switched to wchar_t (4 bytes) (SQL_WCHART_CONVERT)
  # iODBC always use wchar_t (4 bytes)
  # so driver compiled for iODBC will not work properly with unixODBC software
  - |
    if [[ "$ODBC_LIB" =~ "iodbc" ]]; then
      CMAKE_FLAGS="-DFIND_IODBC_FIRST=1 $CMAKE_FLAGS"
    else
      CMAKE_FLAGS="-DFIND_UNIXODBC_FIRST=1 $CMAKE_FLAGS"
    fi
  - export COVERITY_SCAN_BUILD_COMMAND_PREPEND="cmake -G Ninja -DCMAKE_CXX_COMPILER=`which $CXX` -DCMAKE_C_COMPILER=`which $CC` -DTEST_DSN=clickhouse_localhost -DTEST_DSN_W=clickhouse_localhost_w $CMAKE_FLAGS .."
  - export COVERITY_SCAN_PROJECT_NAME="Clickhouse-odbc" COVERITY_SCAN_BRANCH_PATTERN="*" COVERITY_SCAN_NOTIFICATION_EMAIL="chipitsine@gmail.com" COVERITY_SCAN_BUILD_COMMAND="cmake --build . --target all"
  - curl -s "https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh" | bash || true

